# Codex CLI — финальная конфигурация по вашим параметрам

[core]
language = "ru"
default_profile = "gpt5"
workspace_root = "c:\\"
use_plans_for_multistep = true
preamble_short = true

[approvals]
mode = "never"
confirm_non_workspace_writes = false
confirm_network = false
confirm_dangerous = false

[sandbox]
filesystem = "danger-full-access"
network = "enabled"

[limits]
patch_max_lines = 500000
model_request_timeout_ms = 900000
tool_timeout_ms = 900000
command_timeout_ms = 900000

[logging]
save_transcripts = false
transcripts_dir = "c:\\Users\\1\\.codex\\logs"
include_model_params = false
redact_env = [
  "OPENAI_API_KEY","AZURE_OPENAI_API_KEY","GITHUB_TOKEN","NPM_TOKEN","AWS_SECRET_ACCESS_KEY","GOOGLE_API_KEY",
  "HUGGINGFACE_API_KEY","GH_TOKEN","GITLAB_TOKEN","BITBUCKET_TOKEN","SLACK_BOT_TOKEN","SENTRY_DSN",
  "SUPABASE_SERVICE_ROLE_KEY","DATABASE_URL","POSTGRES_PASSWORD","STRIPE_SECRET_KEY","PINECONE_API_KEY","ANTHROPIC_API_KEY"
]

[ignore]
paths = [
  "**/.git/**","**/node_modules/**","**/dist/**","**/build/**","**/target/**",
  "**/.venv/**","**/.pytest_cache/**","**/.next/**","**/.cache/**",
  "**/.idea/**","**/.vscode/**","**/__pycache__/**","**/*.pyc","**/.ipynb_checkpoints/**","**/*.log"
]

[shell]
program = "pwsh.exe"
default_workdir = "c:\\"
denylist = []

[provider]
name = "openai"
api_key_env = "OPENAI_API_KEY"
preferred_auth_method = "chatgpt"

[profiles.gpt5]
provider = "openai"
api = "responses"
model = "gpt-5"
stream = true
max_output_tokens = 128000
request_timeout_ms = 900000
retries = 2
retry_backoff_ms = 0
seed = 42

[profiles.gpt5.reasoning]
effort = "high"

[profiles.gpt5.text]
verbosity = "high"

# --- MCP servers ---
[mcpServers."playwright-mcp"]
command = "node"
args = ["C:\\mcp-servers\\playwright-mcp\\cli.js", "--stdio"]
cwd = "C:\\mcp-servers\\playwright-mcp"
disabled = false

[mcpServers."postgresql-api-ssh"]
command = "node"
args = ["C:\\mcp-servers\\postgresql-api-ssh\\core\\server.js", "--stdio"]
cwd = "C:\\mcp-servers\\postgresql-api-ssh"
disabled = false

[mcpServers."postgresql-api-ssh".env]
NODE_ENV = "production"
MCP_SERVER_VERSION = "2.0.0"
MCP_LOG_LEVEL = "info"

